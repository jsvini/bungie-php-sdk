<?php
/**
 * FireteamFireteamMember
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.9.2
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * FireteamFireteamMember Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class FireteamFireteamMember implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Fireteam.FireteamMember';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'destiny_user_info' => '\OpenAPI\Client\Model\FireteamFireteamUserInfoCard',
        'bungie_net_user_info' => '\OpenAPI\Client\Model\UserUserInfoCard',
        'character_id' => 'int',
        'date_joined' => '\DateTime',
        'has_microphone' => 'bool',
        'last_platform_invite_attempt_date' => '\DateTime',
        'last_platform_invite_attempt_result' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'destiny_user_info' => null,
        'bungie_net_user_info' => null,
        'character_id' => 'int64',
        'date_joined' => 'date-time',
        'has_microphone' => null,
        'last_platform_invite_attempt_date' => 'date-time',
        'last_platform_invite_attempt_result' => 'byte'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'destiny_user_info' => 'destinyUserInfo',
        'bungie_net_user_info' => 'bungieNetUserInfo',
        'character_id' => 'characterId',
        'date_joined' => 'dateJoined',
        'has_microphone' => 'hasMicrophone',
        'last_platform_invite_attempt_date' => 'lastPlatformInviteAttemptDate',
        'last_platform_invite_attempt_result' => 'lastPlatformInviteAttemptResult'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'destiny_user_info' => 'setDestinyUserInfo',
        'bungie_net_user_info' => 'setBungieNetUserInfo',
        'character_id' => 'setCharacterId',
        'date_joined' => 'setDateJoined',
        'has_microphone' => 'setHasMicrophone',
        'last_platform_invite_attempt_date' => 'setLastPlatformInviteAttemptDate',
        'last_platform_invite_attempt_result' => 'setLastPlatformInviteAttemptResult'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'destiny_user_info' => 'getDestinyUserInfo',
        'bungie_net_user_info' => 'getBungieNetUserInfo',
        'character_id' => 'getCharacterId',
        'date_joined' => 'getDateJoined',
        'has_microphone' => 'getHasMicrophone',
        'last_platform_invite_attempt_date' => 'getLastPlatformInviteAttemptDate',
        'last_platform_invite_attempt_result' => 'getLastPlatformInviteAttemptResult'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['destiny_user_info'] = $data['destiny_user_info'] ?? null;
        $this->container['bungie_net_user_info'] = $data['bungie_net_user_info'] ?? null;
        $this->container['character_id'] = $data['character_id'] ?? null;
        $this->container['date_joined'] = $data['date_joined'] ?? null;
        $this->container['has_microphone'] = $data['has_microphone'] ?? null;
        $this->container['last_platform_invite_attempt_date'] = $data['last_platform_invite_attempt_date'] ?? null;
        $this->container['last_platform_invite_attempt_result'] = $data['last_platform_invite_attempt_result'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets destiny_user_info
     *
     * @return \OpenAPI\Client\Model\FireteamFireteamUserInfoCard|null
     */
    public function getDestinyUserInfo()
    {
        return $this->container['destiny_user_info'];
    }

    /**
     * Sets destiny_user_info
     *
     * @param \OpenAPI\Client\Model\FireteamFireteamUserInfoCard|null $destiny_user_info destiny_user_info
     *
     * @return self
     */
    public function setDestinyUserInfo($destiny_user_info)
    {
        $this->container['destiny_user_info'] = $destiny_user_info;

        return $this;
    }

    /**
     * Gets bungie_net_user_info
     *
     * @return \OpenAPI\Client\Model\UserUserInfoCard|null
     */
    public function getBungieNetUserInfo()
    {
        return $this->container['bungie_net_user_info'];
    }

    /**
     * Sets bungie_net_user_info
     *
     * @param \OpenAPI\Client\Model\UserUserInfoCard|null $bungie_net_user_info bungie_net_user_info
     *
     * @return self
     */
    public function setBungieNetUserInfo($bungie_net_user_info)
    {
        $this->container['bungie_net_user_info'] = $bungie_net_user_info;

        return $this;
    }

    /**
     * Gets character_id
     *
     * @return int|null
     */
    public function getCharacterId()
    {
        return $this->container['character_id'];
    }

    /**
     * Sets character_id
     *
     * @param int|null $character_id character_id
     *
     * @return self
     */
    public function setCharacterId($character_id)
    {
        $this->container['character_id'] = $character_id;

        return $this;
    }

    /**
     * Gets date_joined
     *
     * @return \DateTime|null
     */
    public function getDateJoined()
    {
        return $this->container['date_joined'];
    }

    /**
     * Sets date_joined
     *
     * @param \DateTime|null $date_joined date_joined
     *
     * @return self
     */
    public function setDateJoined($date_joined)
    {
        $this->container['date_joined'] = $date_joined;

        return $this;
    }

    /**
     * Gets has_microphone
     *
     * @return bool|null
     */
    public function getHasMicrophone()
    {
        return $this->container['has_microphone'];
    }

    /**
     * Sets has_microphone
     *
     * @param bool|null $has_microphone has_microphone
     *
     * @return self
     */
    public function setHasMicrophone($has_microphone)
    {
        $this->container['has_microphone'] = $has_microphone;

        return $this;
    }

    /**
     * Gets last_platform_invite_attempt_date
     *
     * @return \DateTime|null
     */
    public function getLastPlatformInviteAttemptDate()
    {
        return $this->container['last_platform_invite_attempt_date'];
    }

    /**
     * Sets last_platform_invite_attempt_date
     *
     * @param \DateTime|null $last_platform_invite_attempt_date last_platform_invite_attempt_date
     *
     * @return self
     */
    public function setLastPlatformInviteAttemptDate($last_platform_invite_attempt_date)
    {
        $this->container['last_platform_invite_attempt_date'] = $last_platform_invite_attempt_date;

        return $this;
    }

    /**
     * Gets last_platform_invite_attempt_result
     *
     * @return int|null
     */
    public function getLastPlatformInviteAttemptResult()
    {
        return $this->container['last_platform_invite_attempt_result'];
    }

    /**
     * Sets last_platform_invite_attempt_result
     *
     * @param int|null $last_platform_invite_attempt_result last_platform_invite_attempt_result
     *
     * @return self
     */
    public function setLastPlatformInviteAttemptResult($last_platform_invite_attempt_result)
    {
        $this->container['last_platform_invite_attempt_result'] = $last_platform_invite_attempt_result;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


