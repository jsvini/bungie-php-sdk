<?php
/**
 * CommonModelsDestiny2CoreSettingsTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.9.2
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CommonModelsDestiny2CoreSettingsTest Class Doc Comment
 *
 * @category    Class
 * @description CommonModelsDestiny2CoreSettings
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CommonModelsDestiny2CoreSettingsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CommonModelsDestiny2CoreSettings"
     */
    public function testCommonModelsDestiny2CoreSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "collection_root_node"
     */
    public function testPropertyCollectionRootNode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "badges_root_node"
     */
    public function testPropertyBadgesRootNode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "records_root_node"
     */
    public function testPropertyRecordsRootNode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "medals_root_node"
     */
    public function testPropertyMedalsRootNode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metrics_root_node"
     */
    public function testPropertyMetricsRootNode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active_triumphs_root_node_hash"
     */
    public function testPropertyActiveTriumphsRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active_seals_root_node_hash"
     */
    public function testPropertyActiveSealsRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legacy_triumphs_root_node_hash"
     */
    public function testPropertyLegacyTriumphsRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legacy_seals_root_node_hash"
     */
    public function testPropertyLegacySealsRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "medals_root_node_hash"
     */
    public function testPropertyMedalsRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exotic_catalysts_root_node_hash"
     */
    public function testPropertyExoticCatalystsRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lore_root_node_hash"
     */
    public function testPropertyLoreRootNodeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_rank_progression_hashes"
     */
    public function testPropertyCurrentRankProgressionHashes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "undiscovered_collectible_image"
     */
    public function testPropertyUndiscoveredCollectibleImage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ammo_type_heavy_icon"
     */
    public function testPropertyAmmoTypeHeavyIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ammo_type_special_icon"
     */
    public function testPropertyAmmoTypeSpecialIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ammo_type_primary_icon"
     */
    public function testPropertyAmmoTypePrimaryIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_seasonal_artifact_hash"
     */
    public function testPropertyCurrentSeasonalArtifactHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_season_hash"
     */
    public function testPropertyCurrentSeasonHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "future_season_hashes"
     */
    public function testPropertyFutureSeasonHashes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "past_season_hashes"
     */
    public function testPropertyPastSeasonHashes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
