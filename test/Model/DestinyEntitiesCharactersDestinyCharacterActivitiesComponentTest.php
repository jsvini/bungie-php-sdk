<?php
/**
 * DestinyEntitiesCharactersDestinyCharacterActivitiesComponentTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.9.2
 * Contact: support@bungie.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * DestinyEntitiesCharactersDestinyCharacterActivitiesComponentTest Class Doc Comment
 *
 * @category    Class
 * @description This component holds activity data for a character. It will tell you about the character&#39;s current activity status, as well as activities that are available to the user.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class DestinyEntitiesCharactersDestinyCharacterActivitiesComponentTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "DestinyEntitiesCharactersDestinyCharacterActivitiesComponent"
     */
    public function testDestinyEntitiesCharactersDestinyCharacterActivitiesComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_activity_started"
     */
    public function testPropertyDateActivityStarted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "available_activities"
     */
    public function testPropertyAvailableActivities()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_activity_hash"
     */
    public function testPropertyCurrentActivityHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_activity_mode_hash"
     */
    public function testPropertyCurrentActivityModeHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_activity_mode_type"
     */
    public function testPropertyCurrentActivityModeType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_activity_mode_hashes"
     */
    public function testPropertyCurrentActivityModeHashes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_activity_mode_types"
     */
    public function testPropertyCurrentActivityModeTypes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_playlist_activity_hash"
     */
    public function testPropertyCurrentPlaylistActivityHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "last_completed_story_hash"
     */
    public function testPropertyLastCompletedStoryHash()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
